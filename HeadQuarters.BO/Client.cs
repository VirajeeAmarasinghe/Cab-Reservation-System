//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.Common;
using HeadQuarters.DL;

public class Client
{
    private int clientID;
    private string firstName;
    private string lastName;
    private string conNum;
    private string emailAdd;


	public virtual int client_id
	{
        get { return clientID; }
        set { clientID = value; }
	}

	public virtual string first_name
	{
        get { return firstName; }
        set { firstName = value; }
	}

	public virtual string last_name
	{
        get { return lastName; }
        set { lastName = value; }
	}

	public virtual string contact_number
	{
        get { return conNum; }
        set { conNum = value; }
	}	

	public virtual string email
	{
        get { return emailAdd; }
        set { emailAdd = value; }
	}


    public Client(string Fname,string Lname,string Phone,string Email)
    {
        first_name = Fname;
        last_name = Lname;
        contact_number = Phone;
        email = Email;
    }
    
    public Client()
    {
      
    }



	public bool AddClient(string connString)
	{
        try
        {
            //no need of insert client id->becuase it is auto incremented

            string query = "INSERT INTO Client(first_name,last_name,contact_no,email)"+
            "VALUES(@first_name,@last_name,@contact_no,@email)";
            DbHelper.ConnectionString = connString;
            DbParameter[] paraArray = new DbParameter[4];
            paraArray[0] = (DbParameter)DbHelper.CreateParameter("@first_name", DbType.String,first_name);
            paraArray[1] = (DbParameter)DbHelper.CreateParameter("@last_name", DbType.String,last_name);
            paraArray[2] = (DbParameter)DbHelper.CreateParameter("@contact_no", DbType.String, contact_number);            
            paraArray[3] = (DbParameter)DbHelper.CreateParameter("@email", DbType.String,email);
           

            if (DbHelper.ExecuteNonQuery(CommandType.Text, query, paraArray) > 0)
                return true;
            else
                return false;
        }
        catch (Exception ex)
        {

            throw ex;
        }
	}

	public bool RemoveClient(string connString)
	{
        try
        {
            string query = "Delete from Client where client_id=@client_id";
            DbHelper.ConnectionString = connString;
            DbParameter[] paraArray = new DbParameter[1];
            paraArray[0] = (DbParameter)DbHelper.CreateParameter("@client_id", DbType.Int32,client_id);
            if (DbHelper.ExecuteNonQuery(CommandType.Text, query, paraArray) > 0)
                return true;
            else
                return false;
        }
        catch (Exception ex)
        {

            throw ex;
        }
	}

	public bool UpdateClient(string connString)
	{
        try
        {
            string query = "Update Client set first_name=@first_name,last_name=@last_name,contact_no=@contact_no,"+
                "email=@email where "+
                "client_id=@client_id";
            DbHelper.ConnectionString = connString;
            DbParameter[] paraArray = new DbParameter[5];
            paraArray[0] = (DbParameter)DbHelper.CreateParameter("@first_name", DbType.String,first_name);
            paraArray[1] = (DbParameter)DbHelper.CreateParameter("@last_name", DbType.String,last_name);
            paraArray[2] = (DbParameter)DbHelper.CreateParameter("@contact_no", DbType.String, contact_number);            
            paraArray[3] = (DbParameter)DbHelper.CreateParameter("@email", DbType.String,email);
            paraArray[4] = (DbParameter)DbHelper.CreateParameter("@client_id", DbType.Int32,client_id);

            if (DbHelper.ExecuteNonQuery(CommandType.Text, query, paraArray) > 0)
                return true;
            else
                return false;
        }
        catch (Exception ex)
        {

            throw ex;
        }
	}

	public List<Client> GetClientInfo(string connString)
	{
        try
        {
            List<Client> clientList = new List<Client>();
            DbDataReader reader = null;
            DbHelper.ConnectionString = connString;
            DbConnection conn = DbHelper.GetConnection();
            conn.Open();

            string query = "select client_id,first_name,last_name,contact_no," +
                "email from Client";
            if (client_id !=0)
            {
                query += " where client_id=@client_id";
                DbParameter[] paraArray = new DbParameter[1];
                paraArray[0] = (DbParameter)DbHelper.CreateParameter("@client_id", DbType.Int32,client_id);

                reader = DbHelper.ExecuteReader(ref conn, CommandType.Text, query, paraArray);
            }
            else
            {
                reader = DbHelper.ExecuteReader(ref conn, CommandType.Text, query, null);

            }
            while (reader.Read())
            {
                Client c = new Client();
                c.client_id = Convert.ToInt32(reader[0].ToString());
                c.first_name = reader[1].ToString();
                c.last_name = reader[2].ToString();
                c.contact_number = reader[3].ToString();                
                c.email = reader[4].ToString();
                clientList.Add(c);
            }
            reader.Close();
            conn.Close();
            return clientList;
        }
        catch (Exception ex)
        {

            throw ex;
        }
	}

    //get max client id from the database

    public int GetMaxClientID(string connString)
    {
        try
        {
            int maxClientID = 0;
            DbDataReader reader = null;
            DbHelper.ConnectionString = connString;
            DbConnection conn = DbHelper.GetConnection();
            conn.Open();

            string query = "select MAX(client_id)as MaxID from Client";            
            reader = DbHelper.ExecuteReader(ref conn, CommandType.Text, query, null);            
            if(reader.Read())
            {
                maxClientID = Convert.ToInt32(reader[0].ToString());
            }
            reader.Close();
            conn.Close();
            return maxClientID;
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }


    public Client GetClientInfoAccordingToID(string connString,int id)
    {
        try
        {
            Client client = new Client();
            DbDataReader reader = null;
            DbHelper.ConnectionString = connString;
            DbConnection conn = DbHelper.GetConnection();
            conn.Open();

            string query = "select client_id,first_name,last_name,contact_no,email from Client where client_id='"+id+"'";
            
                reader = DbHelper.ExecuteReader(ref conn, CommandType.Text, query, null);

            
            while (reader.Read())
            {
                
                client.client_id = Convert.ToInt32(reader[0].ToString());
                client.first_name = reader[1].ToString();
                client.last_name = reader[2].ToString();
                client.contact_number = reader[3].ToString();
                client.email = reader[4].ToString();
                
            }
            reader.Close();
            conn.Close();
            return client;
        }
        catch (Exception ex)
        {

            throw ex;
        }
    }
}

